class Global
types
	
public Event ::
	event_type : <grade> | <route> | <commit> | <open_gate> | <close_gate> | <off_end>
	time : nat1
	piece : Piece;
	
public Location_ID = token;

public Algorithm = <grading> | <batching> | <rate>; 

public Order :: 
	priority : nat
	algorithm : Algorithm
	concurrent : nat
	locations : set of Location_ID
	criteria: map seq of char to real
	completion: map seq of char to real
	count : nat
inv order == dom order.criteria subset { "min", "max" } and
						 order.algorithm <> <batching> => card rng order.completion = 0;  
	
public Piece ::
	piece_id : token
	entry_time : nat
	weight : real
	length : real
	position : nat
	destination : [Location_ID]
inv piece == piece.weight >= 0 and piece.weight <= 1000000 and
						 piece.length >= 0 and piece.length <= 1000000 and
						 piece.entry_time >= 0 and
						 piece.position >= 0; 
	
public Batch ::
	pieces : set of Piece
	order : Order;
	
public Gate = <open> | <closed>;
	

values



instance variables


end Global