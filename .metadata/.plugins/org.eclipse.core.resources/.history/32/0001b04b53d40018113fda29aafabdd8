class Global
types
-- TODO Define types here

public Trace = seq of [Event];

public Event = <A> | <V>;

values

-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
-- TODO Define operations here
functions

-- This function defines whether an event is periodic in the trace given a period.
-- 
public Periodic: Trace * Event * nat1 -> bool
Periodic(tr, ev, p) ==
	forall t in set inds tr &
		tr(t) = ev => 
			(t + p <= len tr =>
				(tr(t+p) = ev and
				forall i in set {t+1, ..., t+p-1} & tr(i) <> ev))
			and 
			(t + p > len tr => forall i in set {t+1, ..., len tr} & tr(i) <> ev);

-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here


end Global